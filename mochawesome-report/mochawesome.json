{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2023-07-20T17:53:08.578Z",
    "end": "2023-07-20T17:53:10.872Z",
    "duration": 2294,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0d63ca29-d3ee-4181-9ad1-6dde2518314c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "49c04f5c-b3f2-499d-86c3-f29590e4e3ea",
          "title": "add todo tests",
          "fullFile": "C:\\Users\\y266f\\SideProjects\\Selenium\\test\\firstTest.js",
          "file": "\\test\\firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo to application",
              "fullTitle": "add todo tests successfully adds a todo to application",
              "timedOut": null,
              "duration": 1567,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n\n// navigate to our application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app\")\n\n// add a todo\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn Selenium\", Key.RETURN);\n//assert, checks if the test was done accurately. \nlet todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function (value) {\n    return value\n});\n//assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n// close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "b8053ccb-67c6-447a-b8ea-67b370a311ed",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b8053ccb-67c6-447a-b8ea-67b370a311ed"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1567,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "57f392a1-5441-42b7-b2e5-ab20a213929a",
          "title": "add another todo tests",
          "fullFile": "C:\\Users\\y266f\\SideProjects\\Selenium\\test\\secondTest copy.js",
          "file": "\\test\\secondTest copy.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds another a todo to application",
              "fullTitle": "add another todo tests successfully adds another a todo to application",
              "timedOut": null,
              "duration": 1766,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// launch the browser\nlet driver = await new Builder().forBrowser(\"chrome\").build();\n\n// navigate to our application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app\")\n\n// add a todo\nawait driver.findElement(By.id(\"sampletodotext\")).sendKeys(\"Learn Selenium\", Key.RETURN);\n//assert, checks if the test was done accurately. \nlet todoText = await driver.findElement(By.xpath(\"//li[last()]\")).getText().then(function (value) {\n    return value\n});\n//assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n// close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "3663a8bf-16f6-4356-bb95-2ba04d917cd9",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3663a8bf-16f6-4356-bb95-2ba04d917cd9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1766,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}